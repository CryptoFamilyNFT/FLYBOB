{"version":3,"sources":["Connector.tsx","ModeSwitcher.tsx","containers/Menu/Menu.module.css","containers/Menu/List/List.module.css","containers/Menu/List/List.tsx","testAttributes.ts","containers/Menu/Menu.tsx","components/Poster/Poster.module.css","components/Poster/LeaderBoard.tsx","assets/images/drip.jpeg","components/Poster/TopBoard.tsx","components/Poster/Poster.tsx","Navbar.tsx","App.tsx","serviceWorker.js","ethers/EtherProvider.tsx","index.tsx","containers/Menu/TopScore.tsx","ethers/EtherHelper.tsx","common/AddressFactory.tsx","api/api.ts","ethers/EtherContext.tsx"],"names":["ethereum","window","useStyles","makeStyles","button","background","border","borderRadius","boxShadow","color","height","padding","fontWeight","fontFamily","Connector","_ref","children","loading","setLoading","useState","balance","setBalance","classes","context","saveContext","React","useContext","EtherContext","onError","_len","arguments","length","args","Array","_key","console","log","onChainChanged","chainId","connected","location","reload","onAccountsChanged","accounts","useLayoutEffect","EtherHelper","connectErrorListener","connectAccountListener","connectChainListener","disconnectListeners","useEffect","toFixed","chainSymbol","createElement","style","display","alignItems","fontSize","marginRight","Button","variant","disableElevation","size","minWidth","className","onClick","undefined","resetCtx","initialAccount","initialToast","disconnect","then","_context$connected","connect","ctx","disabled","CircularProgress","addressSigner","substring","ModeSwitcher","props","List","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useLocation","Fragment","pathname","marginTop","NavLink","to","TEST_ATTRIBUTES","APP_COMPONENT","POSTER_COMPONENT","MENU_COMPONENT","BACK_BUTTON","LICENSE_LINK","REPO_LINK","Scene","lazy","About","withRouter","history","routes","Switch","Route","path","component","fallbackNode","includes","styles","data-testid","testAttributes","Suspense","fallback","href","PublicIcon","TwitterIcon","root","width","spacing","overflowX","table","title","textAlign","marginBottom","LeaderBoard","top10Scores","setTop10Scores","async","scores","Api","getScores","top10","sort","a","b","parseInt","score","slice","e","player","getLeaderBoard","Paper","backgroundColor","minHeight","maxHeight","overflowY","gap","Typography","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","index","_row$player","_row$player2","key","scope","TopBoard","borderBottom","src","LOGO","alt","textShadow","Poster","Leaderboard","PosterMobile","Navbar","AppBar","position","Toolbar","Link","marginLeft","mr","App","BrowserRouter","Menu","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","EtherProvider","setContext","loaded","queryProviderInfo","c","toastId","alert","toastTitle","toastDescription","Provider","value","rootElement","document","getElementById","createRoot","render","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","REACT_APP_CHAINID","Number","chainid","this","getChainId","provider","ethers","providers","JsonRpcProvider","address","getRpcUrl","REACT_APP_WEB","Web3Provider","croAmount","toastStatus","toastLink","collectionAddress","tokenId","initProvider","getSigner","uri_solved","collectionContract","Contract","uri","tokenURI","uriWO","ok","Error","json","getNetwork","send","querySignerInfo","JSON","stringify","network","BigNumber","from","toNumber","ensAddress","getCode","amount","signer","BobPass","BobPassABI","tx","mint","transactionResult","wait","transactionHash","Date","now","message","split","croBalancePromise","getBalance","result","utils","formatEther","Promise","all","_context$addressSigne","balanceOf","i","tokenIds","_context$addressSigne2","tokenOfOwnerByIndex","push","URIpath","_context$addressSigne3","_context$addressSigne4","_context$BobTokenIds","BobTokenIds","isBOBHolders","isBobHolder","_context$addressSigne5","BobBalanceOf","_await$Api$getScoreBy","playerScore","getScoreByUser","find","n","TopScore","queryBobInfo","chainChanged","on","accountsChanged","getBlock","timestamp","removeAllListeners","axios","BASE_URL","data","post","newScore","put","createContext"],"mappings":"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","file":"static/js/main.3e837028.chunk.js","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport EtherHelper from \"./ethers/EtherHelper\";\nimport { CircularProgress } from \"@material-ui/core\"; // Import CircularProgress\nimport { EtherContext } from \"./ethers/EtherContext\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { EtherContextRepository } from \"./ethers/EtherContext\";\n\n// @ts-ignore\nconst { ethereum } = window;\n\nconst useStyles = makeStyles({\n  button: {\n    background: \"yellow\",\n    border: \"2px solid yellow\",\n    borderRadius: 3,\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    color: \"black\",\n    height: 48,\n    padding: \"0 0px\",\n    fontWeight: \"bold\",\n    fontFamily: \"Roboto\",\n    \"&:hover\": {\n      background: \"#1976d2\",\n      color: \"white\",\n    },\n  },\n});\n\nconst Connector: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [balance, setBalance] = useState<string | undefined>();\n  const classes = useStyles();\n\n  const { context, saveContext } = React.useContext(EtherContext) as EtherContextRepository;\n\n  useLayoutEffect(() => {\n    EtherHelper.connectErrorListener(onError);\n    EtherHelper.connectAccountListener(onAccountsChanged);\n    EtherHelper.connectChainListener(onChainChanged);\n\n    return () => {\n      EtherHelper.disconnectListeners();\n    };\n  }, [context.connected]);\n\n  useEffect(() => {\n    if (context.balance) setBalance(`${context.balance.toFixed(2)} ${context.chainSymbol}`);\n  }, [context.balance, context.chainSymbol]);\n\n  function onError(...args: any[]) {\n    console.log(\"ERROR\", args);\n  }\n\n  function onChainChanged(chainId: string) {\n    if (!context.connected) return;\n    window.location.reload();\n  }\n\n  function onAccountsChanged(accounts: string[]) {\n    if (!context.connected) return;\n    window.location.reload();\n  }\n\n  function connect() {\n    if (!ethereum) return;\n    if (context.connected ?? false) return;\n    setLoading(true);\n    EtherHelper.connect(context).then((ctx: any) => {\n      console.log(\"Connector.EtherHelper.connect: \", ctx);\n      saveContext(ctx);\n      setLoading(false);\n    });\n  }\n\n  function disconnect() {\n    console.log(\"Connector.disconnect\");\n    setBalance(undefined);\n    const resetCtx = { ...context, ...EtherHelper.initialAccount(), ...EtherHelper.initialToast() };\n    EtherHelper.disconnect(resetCtx).then(saveContext);\n  }\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      {children}\n      {balance ? <span style={{ fontSize: \"2x1\", fontWeight: \"bold\", marginRight: 15 }}>{balance}</span> : \" \"}\n      <Button\n        variant=\"contained\"\n        disableElevation\n        size=\"small\"\n        style={{ marginRight: \"-20px\", minWidth: 100 }}\n        className={classes.button}\n        onClick={context.connected ? disconnect : connect}\n        disabled={loading}\n      >\n        {loading ? (\n          <CircularProgress size={20} color=\"secondary\" />\n        ) : (\n          <span>{context.addressSigner !== undefined ? `${context.addressSigner.substring(0, 7)}...` : \"CONNECT\"}</span>\n        )}\n      </Button>\n    </div>\n  );\n};\n\nexport default Connector;\n","import * as React from \"react\"\n//import { FaMoon, FaSun } from \"react-icons/fa\"\n\n\nexport const ModeSwitcher = (props: any) => {\n  // const { toggleColorMode } = useColorMode()\n  // const text = useColorModeValue(\"dark\", \"light\")\n  // const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <>\n      {/* <IconButton\n        size=\"md\"\n        fontSize=\"lg\"\n        variant=\"ghost\"\n        color=\"current\"\n        marginLeft=\"2\"\n        onClick={toggleColorMode}\n        icon={<SwitchIcon />}\n        aria-label={`Switch to ${text} mode`}\n        {...props}\n      /> */}\n    </>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Menu\":\"Menu_Menu__3dUGj\",\"MenuMenu\":\"Menu_MenuMenu__ECw7c\",\"Links\":\"Menu_Links__3wBOT\",\"License\":\"Menu_License__1-MSG\",\"Repo\":\"Menu_Repo__2RXjW\"};","// extracted by mini-css-extract-plugin\nexport default {\"List\":\"List_List__1c9rg\"};","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport classes from './List.module.css';\nimport { Button } from '@material-ui/core';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\n\nconst List = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const location = useLocation();\n\n  return (\n    <>\n      {isMobile && location.pathname === '/'  ?  (\n        <div className={classes.List} style={{ marginTop: 0 }}>\n          <Button style={{ color: 'black', background: 'yellow' }} variant='contained'>\n            <NavLink to='/game'>Play</NavLink>\n          </Button>\n          <Button style={{ color: 'black', background: 'yellow' }} variant='contained'>\n            <NavLink to='/leaderboard'>Leaderboard</NavLink>\n          </Button>\n        </div>\n      ) : (\n        <div className={classes.List} style={{ marginTop: 300 }}>\n          <Button style={{ color: 'black', background: 'yellow' }} variant='contained'>\n            <NavLink to='/game'>Play</NavLink>\n          </Button>\n          <Button style={{ color: 'black', background: 'yellow' }} variant='contained'>\n            <NavLink to='/leaderboard'>Leaderboard</NavLink>\n          </Button>\n        </div>\n      )}\n    </>\n  )\n};\n\nexport default List;\n","const TEST_ATTRIBUTES = {\n  APP_COMPONENT: 'App',\n  POSTER_COMPONENT: 'Poster',\n  MENU_COMPONENT: 'Menu',\n  BACK_BUTTON: 'Menu__BackButton',\n  LICENSE_LINK: 'Menu__LicenseLink',\n  REPO_LINK: 'Menu__RepoLink'\n};\n\nexport default TEST_ATTRIBUTES;\n","// Libs\nimport React, {Suspense} from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport PublicIcon from '@mui/icons-material/Public';\nimport styles from './Menu.module.css';\n\n// Components\nimport List from './List';\n\n// Type definitions\nimport { MenuType } from './Menu.types';\n\n// Constants\nimport testAttributes from \"../../testAttributes\";\nimport TopBoard from '../../components/Poster/TopBoard';\n\nconst Scene = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"SceneComponent\" */\n    /* webpackPreload: true */\n    './Scene'\n    )\n);\nconst About = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"AboutComponent\" */\n    /* webpackPrefetch: true */\n    './About'\n    )\n);\n\n\nconst Menu: MenuType = ({history}) => {\n  const routes = (<Switch>\n    <Route path='/game' component={Scene}/>\n    <Route path='/author' component={About}/>\n    <Route path='/' component={List}/>\n  </Switch>);\n\n  const handleBackButtonClick = (): void => history.goBack();\n\n  const isBackButtonHidden = ['/', '/leaderboard', '/game', '/flappy-bird', '/flappy-bird/'].includes(history.location.pathname);\n\n  const fallbackNode = <p>Loading...</p>;\n\n  return (\n    <div className={styles.Menu} data-testid={testAttributes.MENU_COMPONENT}>\n      <Suspense fallback={fallbackNode}>{routes}</Suspense>\n      <div className={styles.Links}>\n      <a href=\"https://linktr.ee/BOBAdventures\"><PublicIcon style={{ fontSize: 40, color: \"yellow\" }} /></a>\n      <a href=\"https://twitter.com/CroBobAdventure/\"><TwitterIcon style={{ fontSize: 40, color: \"yellow\" }} /></a>\n      </div>\n    </div>\n  )\n}\nexport {Menu};\nexport default withRouter(Menu);\n","// extracted by mini-css-extract-plugin\nexport default {\"Poster\":\"Poster_Poster__CYb5V\",\"PosterBlur\":\"Poster_PosterBlur__1QoT-\"};","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@mui/material'\nimport Api from '../../api/api';\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 650,\n    fontFamily: \"Josefin Sans, sans-serif\"\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    fontFamily: \"Josefin Sans, sans-serif\"\n  },\n}));\n\ninterface Score {\n  player: string;\n  score: string;\n}\n\nconst LeaderBoard = () => {\n  const classes = useStyles();\n  const [top10Scores, setTop10Scores] = useState<Score[]>();\n\n  useEffect(() => {\n    const getLeaderBoard = async () => {\n      try {\n        const scores = await Api.getScores();\n\n        // Ordina i punteggi in ordine decrescente\n        const sortedScores = scores.sort((a, b) => parseInt(b.score) - parseInt(a.score));\n\n        // Prendi solo i primi 10 punteggi\n        const top10 = sortedScores.slice(0, 10);\n        setTop10Scores(top10);\n      } catch (e) {\n        console.log(e);\n        setTop10Scores([{ player: '', score: '' }]);\n      }\n    };\n\n    getLeaderBoard();\n  }, []);\n\n  return (\n    <Paper style={{ backgroundColor: 'yellow', minHeight: 300, maxHeight: 300, overflowY: 'auto', gap: 10, border: '1px solid aqua' }}>\n      <Typography variant=\"h4\" className={classes.title} style={{ fontFamily: 'Josefin Sans, sans-serif', marginTop: 30 }}>\n        Leaderboard\n      </Typography>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell style={{ fontFamily: 'Josefin Sans, sans-serif' }}>#</TableCell>\n              <TableCell style={{ fontFamily: 'Josefin Sans, sans-serif' }}>User</TableCell>\n              <TableCell style={{ fontFamily: 'Josefin Sans, sans-serif' }}>Score</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {top10Scores?.map((row, index) => (\n              <TableRow key={index}>\n                <TableCell style={{ fontFamily: 'Josefin Sans, sans-serif' }} component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                <TableCell style={{ fontFamily: 'Josefin Sans, sans-serif' }}>{row.player?.slice(0, 5) + '...' + row.player?.slice(-5)}</TableCell>\n                <TableCell style={{ fontFamily: 'Josefin Sans, sans-serif' }}>{row.score}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default LeaderBoard;\n","export default __webpack_public_path__ + \"static/media/drip.f16f034e.jpeg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport {\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n} from '@mui/material'\n\nimport LOGO from '../../assets/images/drip.jpeg';\n\nconst useStyles = makeStyles((theme: any) => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n        fontFamily: \"Josefin Sans, sans-serif\"\n    },\n    title: {\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n        fontFamily: \"Josefin Sans, sans-serif\"\n    },\n}));\n\nconst data = [\n    { user: 'User1', score: 100 },\n    { user: 'User2', score: 90 },\n    { user: 'User3', score: 100 },\n    { user: 'User4', score: 90 },\n];\n\nconst TopBoard = () => {\n    const classes = useStyles();\n    return (\n        <div>\n            <div style={{ backgroundColor: 'transparent', marginTop: 40, border: '2px solid transparent', borderBottom: 'none'}}>\n                <img src={LOGO} alt=\"\" style={{ border: '2px solid transparent', borderRadius: '50%' }} />\n                <Typography style={{ color: 'yellow', fontFamily: \"Josefin Sans, sand-serif\", fontWeight: 'bold', fontSize: '40px', marginTop: 50, textShadow: '0 0 20px black' }}> BOB ADVENTURES 2</Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default TopBoard;\n","// Libs\nimport React, { Suspense } from 'react';\n\n// Images\nimport Logo from '../../assets/images/logo.jpeg';\n\n// Styles\nimport styles from './Poster.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\n// Constants\nimport testAttributes from \"../../testAttributes\";\nimport Leaderboard from './LeaderBoard';\nimport { Button, useMediaQuery, useTheme } from '@material-ui/core';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport TopBoard from './TopBoard';\n\nconst leaderboardData = [\n  { user: 'User1', score: 100 },\n  { user: 'User2', score: 90 },\n  { user: 'User3', score: 100 },\n  { user: 'User4', score: 90 },\n];\n\nconst Poster = () => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const routes = (<Switch>\n    <Route path='/leaderboard' component={Leaderboard} />\n    <Route path='/topboard' component={TopBoard} />\n  </Switch>);\n  const location = useLocation();\n\n  const fallbackNode = <p>Loading...</p>;\n\n  return (\n    <div className={styles.Poster} data-testid={testAttributes.POSTER_COMPONENT}>\n      {isMobile && location.pathname !== '/' ? (\n        <div className={styles.PosterMobile}>\n          <Suspense fallback={fallbackNode}>{routes}</Suspense>\n        </div>\n      ) : (\n        <div>\n          {isMobile && location.pathname === '/' ? <TopBoard/> : <Leaderboard />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Poster;\n","// Navbar.js\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Toolbar, Typography } from '@mui/material';\nimport Connector from './Connector';\nimport { ModeSwitcher } from './ModeSwitcher';\n\nconst Navbar = () => {\n    return (\n        <AppBar position=\"fixed\" style={{height: 60}}>\n            <Toolbar style={{gap: 15}}>\n                <Typography variant=\"h6\" style={{color: 'yellow', fontFamily: 'Josefin Sans, sans-serif'}} component={Link} to=\"/\">\n                    Home\n                </Typography>\n                <Typography variant=\"h6\" style={{color: 'yellow', fontFamily: 'Josefin Sans, sans-serif'}} component={Link} to=\"/leaderboard\">\n                    Leaderboard\n                </Typography>\n                <div style={{ marginLeft: 'auto', display: 'flex', alignItems: 'center', gap: 10, marginRight: 10 }}>\n                    <Connector>\n                        <ModeSwitcher mr={4} />\n                    </Connector>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navbar;\n","// Libs\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Styles\nimport './App.css';\n\n// Components\nimport Menu from './containers/Menu';\nimport Poster from './components/Poster';\n\n// Constants\nimport testAttributes from \"./testAttributes\";\nimport Navbar from './Navbar';\nimport { makeStyles, useMediaQuery, useTheme } from '@material-ui/core';\nimport TopBoard from './components/Poster/TopBoard';\n\nconst useStyles = makeStyles((theme: any) => ({\n  PosterMobile: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    height: '100%',\n  },\n  table: {\n    minWidth: 650,\n    fontFamily: \"Josefin Sans, sans-serif\",\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(2),\n    fontFamily: \"Josefin Sans, sans-serif\",\n  },\n}));\n\nfunction App() {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return (\n    <BrowserRouter>\n      <div className=\"App-blurred\" data-testid={testAttributes.APP_COMPONENT}>\n        <div className=\"App-content\"></div>\n        {isMobile ? (\n          <>\n            <Navbar />\n            <Poster />\n            <Menu />\n          </>\n\n        ) : (\n          <>\n            <Navbar />\n            <Poster />\n            <Menu />\n          </>\n        )}\n\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { ReactNode, useEffect } from \"react\";\nimport EtherHelper from \"./EtherHelper\";\nimport { EtherContext } from \"./EtherContext\";\nimport { IEtherContext } from \"./IEtherContext\";\nimport { Typography, Link, Box } from \"@mui/material\";\nimport Alert from '@mui/material/Alert';  // Replace Chakra UI's Text with MUI's Alert\n\nconst EtherProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  // Commented out the Chakra UI toast and Text\n  // const toast = useToast();\n  const [context, setContext] = React.useState<IEtherContext>({ loaded: false, reload: true });\n\n  const saveContext = (context: IEtherContext) => {\n    setContext(context);\n  };\n\n  useEffect(() => {\n    // bind listeners\n    EtherHelper.connectErrorListener(onError); // TODO move to toast\n\n    // init first time\n    EtherHelper.queryProviderInfo(context).then(c => saveContext({ ...c, loaded: true, connected: false }));\n\n    return () => {// unmount\n      EtherHelper.disconnectListeners();\n    }\n  }, []);\n\n  function onError(e: string) {\n    console.log(\"EtherProvider.error: \", e)\n  }\n\n  function getAlertDescription(): ReactNode {\n    return (\n      <>\n        {/* <Text>{context.toastDescription}</Text> */}\n        <Typography>{context.toastDescription}</Typography>\n        {/* {\n          context.toastLink\n            ?\n            <Link gap={2} href={context.toastLink.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {context.toastLink.name}\n            </Link>\n            : <></>\n        } */}\n      </>\n    );\n  }\n\n  useEffect(() => {\n    if (context.toastId) { // && !toast.isActive(context.toastId)) {\n      // Replaced Chakra UI's useToast with a simple alert\n      alert(`${context.toastTitle}\\n${context.toastDescription}`);\n    }\n\n  }, [context.toastId]);\n\n  return <EtherContext.Provider value={{ context, saveContext }}>{children}</EtherContext.Provider>;\n};\n\nexport default EtherProvider;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport EtherProvider from './ethers/EtherProvider';\n\nconst rootElement = document.getElementById('root') as Element;\nconst root = createRoot(rootElement);\nroot.render(\n    <EtherProvider>\n        <App />\n    </EtherProvider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import Api from \"../../api/api\"\n\nexport const TopScore = async (player: string): Promise<number> => {\n    try {\n        let prev_score = await Api.getScoreByUser(player) ?? 0;\n        const playerScore = prev_score.find(n => n.player === player);\n        console.log(playerScore.score)    \n        return playerScore.score\n    } catch (e) {\n        return 0\n    }\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { IEtherContext } from \"./IEtherContext\";\nimport { IAccount } from \"../entities/IAccount\";\nimport { IWalletInfo } from \"../entities/IWalletInfo\";\nimport { IToast } from \"../entities/IToast\";\nimport { BigNumber, Contract, ethers } from \"ethers\";\nimport AddressFactory from \"../common/AddressFactory\";\nimport BobPassABI from './abi/BobPassABI.json'\nimport { TopScore } from \"../containers/Menu/TopScore\";\n\n// @ts-ignore\nconst { ethereum } = window;\n\ntype Listener = (...args: Array<any>) => void;\n\nexport default class EtherHelper {\n\n    public static getChainId(): number { return process.env.REACT_APP_CHAINID ? Number(process.env.REACT_APP_CHAINID) : 25; }\n\n    private static initProvider(): ethers.providers.Web3Provider {\n        const chainid = this.getChainId();\n        const provider = new ethers.providers.JsonRpcProvider(AddressFactory.getRpcUrl(chainid)) as ethers.providers.Web3Provider;\n        if (process.env.REACT_APP_WEB && process.env.REACT_APP_WEB === \"1\") return provider;\n        return ethereum ? new ethers.providers.Web3Provider(ethereum) : provider;\n    }\n\n    public static initialAccount(): IAccount {\n        return {\n            balance: undefined,\n            croAmount: 0,\n            connected: false\n        } as IAccount;\n    }\n\n    public static initialToast(): IToast {\n        return {\n            toastId: undefined,\n            toastDescription: '',\n            toastStatus: \"success\",\n            toastTitle: '',\n            toastLink: undefined\n        } as IToast;\n    }\n\n\n    public static async getURI(collectionAddress: string, tokenId: number, context: IEtherContext) {\n        try {\n            const provider = EtherHelper.initProvider();\n            const signer = provider.getSigner(context.addressSigner);\n            let uri_solved\n\n            const collectionContract = new ethers.Contract(\n                collectionAddress,\n                ['function tokenURI(uint256 tokenId) view returns (string)'],\n                provider\n            );\n\n            const uri = await collectionContract.tokenURI(tokenId);\n            console.log(uri)\n\n            const uriWO = uri.slice(8)\n            console.log(uri)\n            if (uriWO.slice(0, 3) === 'cdn') {\n                uri_solved = uri\n            } else {\n                uri_solved = 'https://ipfs.io/ipfs/' + uri.slice(7);\n            }\n\n            if (collectionAddress === '0xA5353D17cC3F30DC07D6B0C5510a15Ce382B14A4') {\n                uri_solved = uri\n            }\n\n            console.log('URI del token NFT:', uri_solved);\n\n            const response = await fetch(uri_solved);\n\n            if (!response.ok) {\n                throw new Error(`Errore durante il recupero dell'URI risolto: ${response.status}`);\n            }\n\n            const tokenData = await response.json();\n            return tokenData;\n        } catch (error) {\n            console.error('Errore durante il recupero dei dati NFT:', error);\n            throw error; // Puoi propagare l'errore per gestirlo nella funzione chiamante, se necessario.\n        }\n    }\n\n    public static async connect(context: IEtherContext): Promise<IEtherContext> {\n        try {\n            console.log(\"EtherHelper.connect\");\n            const provider = EtherHelper.initProvider();\n\n            if (!context.chainId) context = await this.getNetwork(provider, context);\n\n            let accounts = await provider.send(\"eth_requestAccounts\", []);\n            // return this.querySignerInfo({...context, addressSigner: accounts[0], connected: true});\n            return this.queryProviderInfo({ ...context, addressSigner: accounts[0], connected: true }).then(this.querySignerInfo)\n\n        } catch (error) {\n            console.log(\"EtherHelper.connect FAILED: \", JSON.stringify(error))\n        }\n\n        return context;\n    }\n\n    public static async getNetwork(provider: ethers.providers.Web3Provider, context: IEtherContext): Promise<IEtherContext> {\n        const network = await provider.getNetwork();\n        const chainId = network.chainId ? BigNumber.from(network.chainId).toNumber() : 25;\n\n        return {\n            ...context,\n            chainId: chainId,\n            chainSymbol: network.ensAddress ? await provider.getCode(network.ensAddress) : \"CRO\"\n        };\n    }\n\n    public static async disconnect(context: IEtherContext): Promise<IEtherContext> {\n        this.disconnectListeners(); // TODO correct place?\n        return this.queryProviderInfo({ loaded: false, reload: true });\n    }\n\n    public static async mint(context: IEtherContext, amount: number): Promise<IEtherContext> {\n        try {\n            if (!context.connected) return context;\n            const provider = EtherHelper.initProvider();\n            const signer = provider.getSigner(context.addressSigner)\n\n            const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer)\n\n            const tx = await BobPass.connect(signer).mint(amount)\n            let transactionResult = await tx.wait();\n            console.log('EtherHelper.mint Transaction Hash: ', JSON.stringify(transactionResult.transactionHash));\n            context = {\n                ...context, toastId: `mint_${transactionResult.transactionHash}`, toastStatus: 'success', toastTitle: 'Bob Mint', toastDescription: `Successfully minted your Bob Invitations`,\n            }\n        } catch (e) {\n            context = { ...context, toastId: `mintError_${Date.now()}`, toastStatus: 'error', toastTitle: 'Bob Invitations Mint', toastDescription: `FAILED to mint: ${(e as Error)?.message.split(';')[0]}` };\n            console.log(\"EtherProvider.mint Error: \", JSON.stringify(e))\n        }\n        console.log(\"mint\")\n        return await this.querySignerInfo({ ...context }).then(this.queryProviderInfo);\n    }\n\n    public static async querySignerInfo(context: IEtherContext): Promise<IEtherContext> {\n        if (!context.addressSigner) return context;\n        const provider = EtherHelper.initProvider();\n        const chainId = EtherHelper.getChainId()\n\n        // const provider = new ethers.providers.Web3Provider(ethereum);\n\n        if (!context.chainId) context = await this.getNetwork(provider, context);\n\n        const signer = provider.getSigner(context.addressSigner);\n\n        function toNumberSafe(bn: BigNumber): number {\n            try {\n                return bn.toNumber();\n            } catch (error) {\n                console.error('Error converting BigNumber to number:', error);\n                return 0; // o un valore predefinito appropriato in caso di errore\n            }\n        }\n\n        const croBalancePromise = signer\n            .getBalance()\n            .then((result: BigNumber) => context.balance = Number(ethers.utils.formatEther(result)))\n            .catch((error: any) => console.log(\"EtherHelper.queryProviderInfo.croBalance: \", JSON.stringify(error)));\n        // context.nfts = [];\n        const userAddress: string = context.addressSigner || '';\n\n        await Promise.all([croBalancePromise]);\n\n        return context;\n    }\n\n    public static async BobBalanceOf(context: IEtherContext) {\n        const provider = EtherHelper.initProvider();\n        const signer = provider.getSigner(context.addressSigner);\n        const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer)\n\n        if (context.connected) {\n            try {\n                const balance = await BobPass.balanceOf(context.addressSigner ?? '').then((i: { toNumber: () => any; }) => i.toNumber())\n                console.log(\"balance and tokenIds: \", balance)\n\n                const tokenIds = [];\n                for (let i = 0; i < balance; i++) {\n                    const tokenId = await BobPass.tokenOfOwnerByIndex(context.addressSigner ?? '', i);\n                    tokenIds.push(tokenId.toNumber());\n                }\n\n                console.log(\"balance and tokenIds: \", balance, tokenIds);\n                return tokenIds;\n            } catch (e) {\n                console.log(\"Can't fetch balanceOf owner:\", e)\n            }\n        }\n    }\n\n    public static async getTokenURI(context: IEtherContext, tokenId: number) {\n        if (context.connected) {\n            const provider = EtherHelper.initProvider();\n            const signer = provider.getSigner(context.addressSigner);\n            const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer);\n\n            const URIpath = await BobPass.tokenURI(tokenId);\n            const response = await fetch(URIpath);\n            const tokenData = await response.json();\n            return tokenData;\n        }\n    }\n\n    /*\n    ------------------ BobPassABI —-------------------------------------------------------------------------------------------------------------------\n    */\n\n    public static async getBobId(context: IEtherContext) {\n        if (context.connected) {\n            const provider = EtherHelper.initProvider();\n            const signer = provider.getSigner(context.addressSigner);\n            const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer);\n            try {\n                if (context.connected) {\n                    try {\n                        const balance = await BobPass.balanceOf(context.addressSigner ?? '').then((i: { toNumber: () => any; }) => i.toNumber())\n                        console.log(\"balance and tokenIds: \", balance)\n\n                        const tokenIds = [];\n                        for (let i = 0; i < balance; i++) {\n                            const tokenId = await BobPass.tokenOfOwnerByIndex(context.addressSigner ?? '', i);\n                            tokenIds.push(tokenId.toNumber());\n                        }\n\n                        console.log(\"balance and tokenIds: \", balance, tokenIds);\n                        return tokenIds;\n                    } catch (e) {\n                        console.log(\"Can't fetch balanceOf owner:\", e)\n                    }\n                }\n            } catch (e) {\n                console.log(\"ERROR.EtherHelper.getHustlerId: \", JSON.stringify(e))\n            }\n        }\n    }\n\n    private static async getBobBalanceOf(context: IEtherContext) {\n        if (context.connected) {\n            const provider = EtherHelper.initProvider();\n            const signer = provider.getSigner(context.addressSigner);\n            const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer);\n\n            try {\n                const response = await BobPass.balanceOf(context.addressSigner || '');\n                const tokenData = response;\n                return tokenData;\n            } catch (e) {\n                console.log(\"ERROR.EtherHelper.getHustlerBalanceOf: \", JSON.stringify(e))\n            }\n        }\n    }\n\n\n    public static async getBobTokenURI(context: IEtherContext, tokenId: number) {\n        if (context.connected) {\n            const provider = EtherHelper.initProvider();\n            const signer = provider.getSigner(context.addressSigner);\n            const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer);\n\n            const URIpath = await BobPass.tokenURI(tokenId);\n            const response = await fetch(URIpath);\n            const tokenData = await response.json();\n            return tokenData;\n        }\n    }\n\n    public static isBOBHolders(context: IEtherContext) {\n        if (context.connected === true) {\n            if (context.BobTokenIds?.length || 0 >= 1) {\n                return true\n            } else {\n                return false\n            }\n        } else {\n            return false\n        }\n    }\n\n    /*\n    ------------------—-------------------------------------------------------------------------------------------------------------------\n    */\n\n    public static async queryBobInfo(context: IEtherContext): Promise<IEtherContext> {\n        if (context.loaded && !context.reload) return context;\n        const today = new Date();\n\n        const provider = EtherHelper.initProvider();\n        const signer = provider.getSigner(context.addressSigner)\n        const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer);\n\n        const isBOBHolders = EtherHelper.isBOBHolders(context)\n        context.isBobHolder = isBOBHolders\n\n        if (!context.chainId) context = await this.getNetwork(provider, context);\n\n        await Promise.all([isBOBHolders]);\n\n        return context;\n    }\n\n\n    public static async queryProviderInfo(context: IEtherContext): Promise<IEtherContext> {\n        if (context.loaded && !context.reload) return context;\n\n\n        const provider = EtherHelper.initProvider();\n        const signer = provider.getSigner(context.addressSigner);\n        const BobPass = new Contract('0x41C7874A2fE9D1ea126bfBD44597A1f96546152e', BobPassABI, signer)\n\n        const tokenIds = EtherHelper.BobBalanceOf(context)\n            .then((result) => context.BobTokenIds = result ?? [])\n            .catch((e) => JSON.stringify(e))\n\n        const score = TopScore(context.addressSigner ?? '')\n             .then((result) => context.score = result ?? [])\n             .catch((e) => console.log(e))\n\n\n        if (!context.chainId) context = await this.getNetwork(provider, context);\n\n        await Promise.all([tokenIds, score]);\n        await Promise.all([this.queryBobInfo(context)])\n\n        return context;\n    }\n\n    public static async queryOwnerProviderInfo(context: IEtherContext): Promise<IEtherContext> {\n\n        const provider = EtherHelper.initProvider();\n\n        /*\n        if (!context.chainId) context = await this.getNetwork(provider, context);\n        await Promise.all([isTokenPausedPromise, isRewardsPausedPromise, isAutoSwapEnabledPromise,\n            rewardsBalancePromise, taxTokensromise, liqTokensPromise, thresholdPromise]);\n        */\n\n        return context;\n    }\n\n    //#endregion\n\n\n    public static connectChainListener(chainChanged: Listener) {\n        ethereum?.on('chainChanged', chainChanged);\n    }\n\n    public static connectAccountListener(accountsChanged: Listener) {\n        ethereum?.on('accountsChanged', accountsChanged);\n    }\n\n    public static connectErrorListener(error: Listener) {\n        ethereum?.on(\"error\", error);\n    }\n\n    public static async getBlockTimeStamp(): Promise<number> {\n        const provider = EtherHelper.initProvider();\n        const block = await provider.getBlock(\"latest\");\n        return block.timestamp * 1000;\n    }\n\n    public static disconnectListeners() {\n        ethereum?.removeAllListeners();\n    }\n}","export default class AddressFactory {\n\n    static getDeployerAddress(chainId: Number): string {\n        switch (chainId) {\n          case 25:\n            return \"0xC1ec8665C40B8cAB988C3E126d96d28Bbcdd550a\"; // Mainnet\n          case 5:\n          case 338:\n            return \"0x60fE283F72f309F0900e43bcd4Ce74FfA0e81935\"; //Testnet\n          default:\n            return \"\";\n        }\n      }\n\n      static getHyenaLottery(chainId: number): string {\n        switch (chainId) {\n          case 25:\n            return \"0xA24480744F01616e261D129a4dA268DeEB640ed9\";\n          case 5:\n          case 338: // CRO TEST\n            return \"\";\n          default:\n            return \"\";\n        }\n      }\n\n      static getHyenaCasino(chainId: number): string {\n        switch (chainId) {\n          case 25:\n            return \"0x62f0a7C28588E2DFd2f8ddac0Dd394E9A46130Eb\";\n          case 5:\n          case 338: // CRO TEST\n            return \"\";\n          default:\n            return \"\";\n        }\n      }\n\n      static getHustlers(chainId: number): string {\n        switch (chainId) {\n          case 25:\n            return \"0xA5353D17cC3F30DC07D6B0C5510a15Ce382B14A4\";\n          case 5:\n          case 338: // CRO TEST\n            return \"\";\n          default:\n            return \"\";\n        }\n      }\n\n      static getHyenaRaffle(chainId: number): string {\n        switch (chainId) {\n          case 25:\n            return \"0x6De751fc359a32eDd3cd4164f8750f303f4BCE03\";\n          case 5:\n          case 338: // CRO TEST\n            return \"\";\n          default:\n            return \"\";\n        }\n      }\n\n      static getHyenaAddress(chainId: Number): string {\n        switch (chainId) {\n          case 25:\n            return \"0x257f30fbD890840FA00c2e0f043cF5Ad9A631546\";\n          case 5:\n          case 338: // CRO TEST\n            return \"0x2e38789FAe68D645D651A3cC5e27aD73004Ae71D\";\n          default:\n            // Account #0 Private Key: 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\n            return \"\";\n        }\n      }\n\n    static getRpcUrl(chainId: Number | undefined): string | undefined {\n        switch (chainId) {\n            case 25:\n                return 'https://evm.cronos.org/';\n            case 338:\n                return 'https://evm-t3.cronos.org';\n            default:\n                return 'https://evm.cronos.org';\n        }\n    }\n\n    static getRoyaltiesAddress(chainId: Number): string {\n      switch (chainId) {\n        case 25:\n          return \"0xf966c9722bc8b320ec738db2e2d10ba2ef075756\"; // Mainnet\n        case 5:\n        case 338:\n          return \"0x36c911fce2be145c338f10184832c95be7dd5f43\"; //Testnet\n        default:\n          return \"\";\n      }\n    }\n\n    static formatAddress(address: string): string {\n        return address && address.length > 20 ? `${address.substring(0, 7)}...${address.substring(address.length - 5)}` : '';\n    }\n}\n","import axios from 'axios';\n\ninterface Score {\n  player: string;\n  score: string;\n}\n\nexport default class Api {\n\n  public static BASE_URL = 'https://bobdb.onrender.com/api';\n\n  public static async getScores(): Promise<Score[]> {\n    try {\n      const response = await axios.get(`${Api.BASE_URL}/scores`);\n\n      await Promise.all([response])\n\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n      throw error;\n    }\n  }\n\n  public static async getPlayer(): Promise<Score[]> {\n    try {\n      const response = await axios.get(`${Api.BASE_URL}/players`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n      throw error;\n    }\n  }\n\n  public static async getScoreByUser(player: string): Promise<any[]> {\n    try {\n      const response = await axios.get(`${this.BASE_URL}/scores/${player}`);\n      console.log(response.data)\n      return response.data\n    } catch (error) {\n      console.error(`Error fetching score for user ${player}:`, error);\n      throw error;\n    }\n  }\n\n  public static async addScore(player: string, score: string): Promise<void> {\n    try {\n      await axios.post(`${Api.BASE_URL}/scores`, { player, score });\n    } catch (error) {\n      console.error('Error adding score:', error);\n      throw error;\n    }\n  }\n\n  public static async findPlayer(player: string): Promise<Score[]> {\n    try {\n      const response = await axios.get(`${Api.BASE_URL}/scores/${player}`);\n      console.log(response.data)\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching scores for player ${player}:`, error);\n      throw error;\n    }\n  }\n\n  public static async updatePlayer(player: string, newScore: string): Promise<void> {\n    try {\n      await axios.put(`${Api.BASE_URL}/scores`, { player, newScore });\n    } catch (error) {\n      console.error('Error updating player:', error);\n      throw error;\n    }\n  }\n}\n\n","import React from \"react\";\nimport { EtherContextRepository } from \"./EtherContextRepository\";\n\nexport const EtherContext = React.createContext<EtherContextRepository | null>(null);\n\nexport type { EtherContextRepository };\n"],"sourceRoot":""}